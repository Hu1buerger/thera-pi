<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="CalcKilometer">
    <property environment="env"/>
    <property name="Libraries.location" value="../Libraries"/>
    <property name="Reha.location" value="../Reha"/>
    <property name="junit.output.dir" value="bin-tests"/>
    <property name="RehaCommon.location" value="../RehaCommon"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>

    <path id="RehaCommon.classpath">
        <pathelement location="${RehaCommon.location}/bin"/>
        <pathelement location="${RehaCommon.location}/bin-tests"/>
        <pathelement location="${Libraries.location}/lib/swingx/grad.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/ag.ion.noa_2.2.3.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/bootstrapconnector.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/java_uno_accessbridge.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/java_uno.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/juh.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/jurt.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/jut.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/officebean.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/registry-3.1.3.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/ridl.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/sandbox.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/unoil.jar"/>
        <pathelement location="${Libraries.location}/lib/openofficeorg/unoloader.jar"/>
        <pathelement location="${Libraries.location}/lib/swingx/swing-worker.jar"/>
        <pathelement location="${Libraries.location}/lib/swingx/swingx-1.6.jar"/>
        <pathelement location="${Libraries.location}/lib/logging/logback-classic-1.2.3.jar"/>
        <pathelement location="${Libraries.location}/lib/logging/logback-core-1.2.3.jar"/>
        <pathelement location="${Libraries.location}/lib/logging/slf4j-api-1.7.25.jar"/>
        <pathelement location="${Libraries.location}/lib/logging/sysout-over-slf4j-1.0.2.jar"/>
        <pathelement location="${Libraries.location}/lib/ini/ini4j-0.5.4.jar"/>
        <pathelement location="${Libraries.location}/tests/lib/jna_junit/junit-4.12.jar"/>
        <pathelement location="${Libraries.location}/tests/lib/jna_junit/hamcrest-all-1.3.jar"/>
        <pathelement location="${Libraries.location}/lib/jgoodies/forms-1.3.0.jar"/>
    </path>
    <path id="CalcKilometer.classpath">
        <pathelement location="bin"/>
        <pathelement location="bin-tests"/>
        <pathelement location="${Libraries.location}/lib/logging/slf4j-api-1.7.25.jar"/>
        <path refid="RehaCommon.classpath"/>
        <pathelement location="${Libraries.location}/tests/lib/jna_junit/hamcrest-all-1.3.jar"/>
        <pathelement location="${Libraries.location}/tests/lib/jna_junit/hamcrest-junit-2.0.0.0.jar"/>
        <pathelement location="${Libraries.location}/tests/lib/jna_junit/junit-4.12.jar"/>
        <pathelement location="${Libraries.location}/lib/json/json-20201115.jar"/>
    </path>
    <import file="build-user.xml"/>
    <target name="init">
        <mkdir dir="bin"/>
        <mkdir dir="bin-tests"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin-tests">
            <fileset dir="tests">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
        <delete dir="bin-tests"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${RehaCommon.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${RehaCommon.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="CalcKilometer.classpath"/>
        </javac>

    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.xml" dir="${Reha.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${Reha.location}" inheritAll="false" target="build"/>
    </target>
    <target name="DistanceTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="openMaps.DistanceTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="CalcKilometer.classpath"/>
        </junit>
    </target>
    <target name="NominatimTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="openMaps.NominatimTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="CalcKilometer.classpath"/>
        </junit>
    </target>
    <target name="RouteTest.testCOmposeURL">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="openMaps.RouteTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="CalcKilometer.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
